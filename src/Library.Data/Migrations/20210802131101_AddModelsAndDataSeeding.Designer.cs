// <auto-generated />
using System;
using Library.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Library.Data.Migrations
{
    [DbContext(typeof(LibraryDbContext))]
    [Migration("20210802131101_AddModelsAndDataSeeding")]
    partial class AddModelsAndDataSeeding
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.8")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Library.Business.Models.Author", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("About")
                        .IsRequired()
                        .HasColumnType("varchar(300)");

                    b.Property<string>("Document")
                        .IsRequired()
                        .HasColumnType("varchar(14)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<int>("TypePerson")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Authors");

                    b.HasData(
                        new
                        {
                            Id = new Guid("7c022886-4877-419a-94c3-824fb7aee950"),
                            About = "Dr. Harvey M. Deitel, presidente e diretor de estratégia da Deitel & Associates, Inc., tem 45 anos de experiência acadêmica e industrial na área de informática. Dr. Deitel recebeu B.S. e M.S. graus do MIT e um Ph.D. da Boston University.",
                            Document = "07927830007",
                            Name = "Harvey Deitel",
                            TypePerson = 1
                        },
                        new
                        {
                            Id = new Guid("ca7329e9-dede-42ee-9a04-b372bd902751"),
                            About = "Luciano Ramalho é programador Python desde 1998, Fellow da Python Software Foundation; é sócio do Python.pro.br – uma empresa de treinamento – e cofundador do Garoa Hacker Clube, o primeiro hackerspace do Brasil.",
                            Document = "06057967003",
                            Name = "Luciano Ramalho",
                            TypePerson = 1
                        },
                        new
                        {
                            Id = new Guid("1e221da8-5000-446b-9477-4f67cd2fce7a"),
                            About = "Robert Cecil Martin, também conhecido como Uncle Bob, é uma grande personalidade da comunidade de desenvolvimento de software, métodos ágeis e software craftsmanship, atuando na área desde 1970.",
                            Document = "54935366000181",
                            Name = "Robert Cecil Martin",
                            TypePerson = 2
                        });
                });

            modelBuilder.Entity("Library.Business.Models.Book", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<Guid>("AuthorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CompanyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(300)");

                    b.Property<Guid>("GenreId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ISBN")
                        .IsRequired()
                        .HasColumnType("varchar(13)");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(8,2)");

                    b.Property<DateTime>("PublicationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.HasIndex("CompanyId");

                    b.HasIndex("GenreId");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            Id = new Guid("14a8666b-908c-4915-86c2-6ee42b8ec80f"),
                            Active = true,
                            AuthorId = new Guid("7c022886-4877-419a-94c3-824fb7aee950"),
                            CompanyId = new Guid("a507ce21-f383-41d6-a583-d596adc80bb3"),
                            Description = "O Autor explica neste livro, como usar a linguagem de programação C# a principal linguagem na iniciativa .NET da Microsoft para programação de propósito geral e para desenvolver aplicativos multicamadas, cliente-servidor, com uso intensivo de banco de dados, baseados na Internet e na Web.",
                            GenreId = new Guid("640a79e8-a4ac-472d-8086-59773836d907"),
                            ISBN = "9788534614597",
                            Image = "906708E8-3F62-4626-8514-DF9EAC682460_image.jpg",
                            Price = 150m,
                            PublicationDate = new DateTime(2021, 8, 2, 10, 11, 1, 233, DateTimeKind.Local).AddTicks(8044),
                            Title = "C#: Como Programar"
                        },
                        new
                        {
                            Id = new Guid("6ac30476-7f85-43fe-9a48-bd6a583f89a3"),
                            Active = true,
                            AuthorId = new Guid("ca7329e9-dede-42ee-9a04-b372bd902751"),
                            CompanyId = new Guid("59c5a2c3-d45c-481a-855d-8abc2904c95f"),
                            Description = "A simplicidade de Python permite que você se torne produtivo rapidamente, porém isso muitas vezes significa que você não estará usando tudo que ela tem a oferecer. Com este guia prático, você aprenderá a escrever um código Python eficiente e idiomático aproveitando seus melhores recursos",
                            GenreId = new Guid("640a79e8-a4ac-472d-8086-59773836d907"),
                            ISBN = "9788575224625",
                            Image = "52557B29-C28C-4866-A08D-D0C00526E921_PythonFluente.jpg",
                            Price = 115m,
                            PublicationDate = new DateTime(2021, 8, 2, 10, 11, 1, 234, DateTimeKind.Local).AddTicks(8949),
                            Title = "Python Fluente"
                        },
                        new
                        {
                            Id = new Guid("22ff22c1-5acd-4a71-bd16-50376b706ccf"),
                            Active = false,
                            AuthorId = new Guid("1e221da8-5000-446b-9477-4f67cd2fce7a"),
                            CompanyId = new Guid("1e255a90-d95b-4164-bf01-8bd7cdae040b"),
                            Description = "Mesmo um código ruim pode funcionar. Mas se ele não for limpo, pode acabar com uma empresa de desenvolvimento. Perdem-se a cada ano horas incontáveis e recursos importantes devido a um código mal escrito. Mas não precisa ser assim.",
                            GenreId = new Guid("640a79e8-a4ac-472d-8086-59773836d907"),
                            ISBN = "9788576082675",
                            Image = "0DBC0E1F-C13B-430E-9A11-65C1A669FAEA_CleanCode.jpg",
                            Price = 75m,
                            PublicationDate = new DateTime(2021, 8, 2, 10, 11, 1, 234, DateTimeKind.Local).AddTicks(8988),
                            Title = "Código limpo"
                        });
                });

            modelBuilder.Entity("Library.Business.Models.Company", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Document")
                        .IsRequired()
                        .HasColumnType("varchar(14)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<int>("TypePerson")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Companies");

                    b.HasData(
                        new
                        {
                            Id = new Guid("59c5a2c3-d45c-481a-855d-8abc2904c95f"),
                            Document = "00591191000103",
                            Name = "Novatec Editora",
                            TypePerson = 2
                        },
                        new
                        {
                            Id = new Guid("a507ce21-f383-41d6-a583-d596adc80bb3"),
                            Document = "01404158001838",
                            Name = "Pearson Universidades",
                            TypePerson = 2
                        },
                        new
                        {
                            Id = new Guid("1e255a90-d95b-4164-bf01-8bd7cdae040b"),
                            Document = "51319823000115",
                            Name = "Alta Books",
                            TypePerson = 2
                        });
                });

            modelBuilder.Entity("Library.Business.Models.Genre", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(300)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Genres");

                    b.HasData(
                        new
                        {
                            Id = new Guid("640a79e8-a4ac-472d-8086-59773836d907"),
                            Description = "Tecnologia é o conjunto de técnicas, habilidades, métodos e processos usados na produção de bens ou serviços, ou na realização de objetivos, como em investigações científicas.",
                            Name = "Tecnologia"
                        });
                });

            modelBuilder.Entity("Library.Business.Models.Book", b =>
                {
                    b.HasOne("Library.Business.Models.Author", "Author")
                        .WithMany("Books")
                        .HasForeignKey("AuthorId")
                        .IsRequired();

                    b.HasOne("Library.Business.Models.Company", "Company")
                        .WithMany("Books")
                        .HasForeignKey("CompanyId")
                        .IsRequired();

                    b.HasOne("Library.Business.Models.Genre", "Genre")
                        .WithMany("Books")
                        .HasForeignKey("GenreId")
                        .IsRequired();

                    b.Navigation("Author");

                    b.Navigation("Company");

                    b.Navigation("Genre");
                });

            modelBuilder.Entity("Library.Business.Models.Author", b =>
                {
                    b.Navigation("Books");
                });

            modelBuilder.Entity("Library.Business.Models.Company", b =>
                {
                    b.Navigation("Books");
                });

            modelBuilder.Entity("Library.Business.Models.Genre", b =>
                {
                    b.Navigation("Books");
                });
#pragma warning restore 612, 618
        }
    }
}
